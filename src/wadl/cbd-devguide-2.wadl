<?xml version="1.0" encoding="UTF-8"?>

<!--
<!DOCTYPE application [
    <!ENTITY % common  SYSTEM "../common/common.ent">
    %common;
]>
-->

<application xmlns="http://wadl.dev.java.net/2009/02"
	xmlns:wadl="http://wadl.dev.java.net/2009/02"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
	xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:cbd="http://docs.openstack.org/database/api/v1.0"
	xmlns:clusters="http://docs.openstack.org/database/api/v1.0">


	<!--*******************************************************-->
	<!-- GRAMMARS                                              -->
	<!--*******************************************************-->

	<!-- What do I need here for Cloud Big Data Dev Guide, if anything? 
	<grammars>
		<include href="../common/xsd/api.xsd"/> (identity grammars)
		<include href="../common/xsd/api-common.xsd"/> (identity grammars)
		<include href="dbaas.xsd" /> (databases grammars)
	</grammars>
-->

	<!--*******************************************************-->
	<!-- ALL RESOURCES                                         -->
	<!--*******************************************************-->

	<resources base="https://dfw.bigdata.api.rackspacecloud.com/">
		<resource id="version" path="v2/">
			<resource id="tenant_id" path="{tenant_id}">
				<param name="tenant_id" style="template"
					type="xsd:string">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para>The tenant ID in a
							multi-tenancy cloud.</para>
					</wadl:doc>
				</param>

				<resource id="credentials" path="credentials">
					<method href="#listCredentials"/>
					<resource id="credentialTypes" path="{type}">
						<param name="type" style="template"
							type="xsd:string">
							<wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
								Specify type of credential. Supported options are <code>ssh_keys</code> and <code>cloud_files</code>.
								The GET calls also support <code>types</code> and <code>connectors</code>.</wadl:doc>
						</param>
						<method href="#getCredentialTypes"/>
						<method href="#createCredential"/>
						<resource id="credential" path="{name}">
							<param name="name" style="template"
								type="xsd:string">
								<wadl:doc xml:lang="EN"
									xmlns="http://docbook.org/ns/docbook"
									>Name or identifier for a credential.</wadl:doc>
							</param>
							<method href="#updateCredential"/>
							<method href="#deleteCredential"/>
						</resource>
					</resource>
				</resource>

				<resource id="distros" path="distros">
					<method href="#listDistros"/>
					<resource id="distro" path="{distro_id}">
						<param name="distro_id" style="template"
							type="xsd:string">
							<wadl:doc xml:lang="EN"
								xmlns="http://docbook.org/ns/docbook"
								>A specific distribution ID.</wadl:doc>
						</param>
						<method href="#getDistroDetails"/>
					</resource>
				</resource>

				<resource id="stacks" path="stacks">
					<method href="#createStack"/>
					<method href="#listStacks"/>
					<resource id="stack" path="{stackId}">
						<param name="stackId" style="template"
							type="xsd:string">
							<wadl:doc xml:lang="EN"
								xmlns="http://docbook.org/ns/docbook"
								>The stack ID.</wadl:doc>
						</param>
						<method href="#getStackDetails"/>
						<method href="#deleteStack"/>
					</resource>
				</resource>

				<resource id="clusters" path="clusters">
					<method href="#createCluster"/>
					<method href="#listClusters"/>

					<resource id="cluster" path="{clusterId}">
						<param name="clusterId" style="template"
							type="xsd:string">
							<wadl:doc xml:lang="EN"
								xmlns="http://docbook.org/ns/docbook"
								>The cluster ID.</wadl:doc>
						</param>
						<method href="#getClusterDetails"/>
						<method href="#deleteCluster"/>
						<method href="#resizeCluster"/>

						<resource id="nodes" path="nodes">
							<method href="#listClusterNodes"/>
						</resource>
					</resource>
				</resource>

				<resource id="scripts" path="scripts">
					<method href="#createScript"/>
					<method href="#listScripts"/>
					<resource id="script" path="{scriptId}">
						<param name="scriptId" style="template"
							type="xsd:string">
							<wadl:doc xml:lang="EN"
								xmlns="http://docbook.org/ns/docbook"
								>The script ID.</wadl:doc>
						</param>
						<method href="#updateScript"/>
						<method href="#deleteScript"/>
					</resource>
				</resource>

				<resource id="flavors" path="flavors">
					<method href="#listFlavors"/>
				</resource>

				<resource id="limits" path="limits">
					<method href="#getLimits"/>
				</resource>
			</resource>
		</resource>
	</resources>

	<!--*******************************************************-->
	<!-- ALL METHODS                                           -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- CREDENTIAL METHODS                                    -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- List all credentials: listCredentials                 -->
	<!--*******************************************************-->

	<method name="GET" id="listCredentials">
		<wadl:doc xml:lang="EN" title="List all credentials"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operations lists all user credentials.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_credentials.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Get Credential types: getCredentialTypes              -->
	<!--*******************************************************-->

	<method name="GET" id="getCredentialTypes">
		<wadl:doc xml:lang="EN" title="List credentials by type"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all user credentials of the specified type.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook"
					title="List credential - types example: JSON response">
					<xsdxt:code
						href="../wadl/samples/lava2/list_credential_types.json"
					/>
				</wadl:doc>
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook"
					title="List credential - ssh_keys example: JSON response">
					<xsdxt:code
						href="../wadl/samples/lava2/list_ssh_credentials.json"
					/>
				</wadl:doc>
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook"
					title="List credential - connectors example: JSON response">
					<xsdxt:code
						href="../wadl/samples/lava2/list_connector_credentials.json"
					/>
				</wadl:doc>
			</representation>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
        </method>

	<!--*******************************************************-->
	<!-- Create credential: createCredential                   -->
	<!--*******************************************************-->

	<method name="POST" id="createCredential">
		<wadl:doc xml:lang="EN" title="Create a credential"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operations creates a new credential for the specified type.</para>
			
				<para>Based on the chosen type, the
					request body varies. A general pattern is followed of a dict of the <code>type</code> that
					contains one or more credential related fields.</para>
			<para>The 400 error code might indicate any of the
				following issues:</para>
			<itemizedlist spacing="compact">
				<listitem><para>The response body is invalid.</para>
				</listitem>
				<listitem><para>The type specified in the request body and URI do not match.</para>
				</listitem>
				<listitem><para>The credential type is invalid.</para>
				</listitem>
			</itemizedlist>
			<para>The 409 error code might indicate that there is a duplicate primary identifier for the create request, for example, a duplicate key name or user name.</para>
				
		</wadl:doc>
		<request>
			<representation mediaType="application/json">
				<doc title="Create a credential - ssh_keys example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/create_ssh_credential_request.json"/>
				</doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="ssh_keys" style="plain" path="$.ssh_keys" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">SSH key information.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="key_name" style="plain" path="$.ssh_keys.key_name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name for the SSH key.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="public_key" style="plain" path="$.ssh_keys.public_key" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">SSH public key.
					</p></doc>
				</param>
				
			</representation>
			<representation mediaType="application/json">
				<doc title="Create a credential - cloud_files example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/create_cf_credential_request.json"/>
				</doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="cloud_files" style="plain" path="$.cloud_files.username" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Cloud Files account user name.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="cloud_files" style="plain" path="$.cloud_files.api_key" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">API key for the Cloud Files account.
					</p></doc>
				</param>
				
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<doc title="Create a credential - ssh_keys example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/create_ssh_credential_response.json"/>
				</doc>
				<doc title="Create a credential - cloud_files example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/create_cf_credential_response.json"/>
				</doc>
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>



	<!--*******************************************************-->
	<!-- Update credential: updateCredential                   -->
	<!--*******************************************************-->

	<method name="PUT" id="updateCredential">
		<wadl:doc xml:lang="EN" title="Update a credential"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation updates the specified user credential.</para>
			<para>The update marks clusters that already use the credential as out of sync.</para>
			<para>The 400 error code might indicate missing or invalid
				parameters.</para>
		</wadl:doc>
		<request>
			<representation mediaType="application/json">
				<doc title="Update a credential example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/update_credential_request.json"/>
				</doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="ssh_keys" style="plain" path="$.ssh_keys" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">SSH key information.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="key_name" style="plain" path="$.ssh_keys.key_name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name for the ssh key.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="public_key" style="plain" path="$.ssh_keys.public_key" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">SSH public key.
					</p></doc>
				</param>
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<doc title="Update a credential example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/update_credential_response.json"/>
				</doc>
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Delete credential: deleteCredential                   -->
	<!--*******************************************************-->

	<method name="DELETE" id="deleteCredential">
		<wadl:doc xml:lang="EN" title="Delete a credential"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation deletes the specified credential.</para>
			<para>You can delete only credentials that are not used by any active clusters.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>
		</wadl:doc>
		
		<response status="204">
			<doc title="No Content" xml:lang="EN">The server has fulfilled the request and does not need to return a response body.</doc>
			<representation mediaType="application/json">
			</representation>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>

	<!--*******************************************************-->
	<!-- DISTROS METHODS                                       -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- List available distros: getDistros                    -->
	<!--*******************************************************-->

	<method name="GET" id="listDistros">
		<wadl:doc xml:lang="EN" title="List available distros"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all available distros.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_distros_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- List distro details: getDistroDetails                 -->
	<!--*******************************************************-->

	<method name="GET" id="getDistroDetails">
		<wadl:doc xml:lang="EN" title="Show distro details"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">For the specified distro, the operation provides a detailed list of all the supported services and their corresponding components and modes of operation.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
<!--			<table rules="all">
            <caption>Attributes for distro details</caption>
            <thead>
                <tr>
                    <td colspan="1">Keys</td>
                    <td colspan="1">Attributes</td>
                    <td colspan="3">Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="1" rowspan="4">distro</td>
                    <td colspan="1">id</td>
                    <td colspan="3"><para>Identifier for a particular distribution. Ex: HDP2.1</para></td>
                </tr>
                <tr>
                    <td colspan="1">name</td>
                    <td colspan="3">Descriptive name for a distribution. Ex: Hortonworks Data Platform</td>
                </tr>
                <tr>
                    <td colspan="1">version</td>
                    <td colspan="3">Version of the distribution. Ex: 2.1</td>
                </tr>
                <tr>
                    <td colspan="1">services</td>
                    <td colspan="3">A list of services that are supported for a particular distribution. Ex: HDFS, Yarn etc.</td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="4">services</td>
                    <td colspan="1">name</td>
                    <td colspan="3">Specifies the name of a praticular service. Ex: HDFS</td>
                </tr>
                <tr>
                    <td colspan="1">version</td>
                    <td colspan="3">Version of the service. Ex: 2.4.</td>
                </tr>
                <tr>
                    <td colspan="1">components</td>
                    <td colspan="3">Components are a subset of services and relates to individual processes. Ex: Namenode, Datanode
                    </td>
                </tr>
                <tr>
                    <td colspan="1">modes</td>
                    <td colspan="3">Certain services can operate in different modes. This details the list of supported modes.
                    	Ex: HA, Secondary Namenode, Federated HDFS.
                    </td>
                </tr>
                <tr>
                    <td colspan="1" rowspan="2">components</td>
                    <td colspan="1">name</td>
                    <td colspan="3">Specifies the component name. Ex: Namenode</td>
                </tr>
                <tr>
                    <td colspan="1">mode</td>
                    <td colspan="3">Specifies that a particular component is applicable only for a certain mode of operation of the service. Ex: Journal Node applies only for a HA Namenode.</td>
                </tr>
            </tbody>
        	</table> -->
					<xsdxt:code
						href="../wadl/samples/lava2/get_distro_details_response.json"
					/>
				</wadl:doc>
	
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.distro.id">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Identifier for a particular distribution. For example: HDP2.1
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.distro.name">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Descriptive name for a distribution. For example: Hortonworks Data Platform
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="version" style="plain" path="$.distro.version">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Version of the distribution. For example: 2.1
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="services" style="plain" path="$.distro.services">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of services that are supported for a particular distribution. For example: HDFS, Yarn, and so on. 
					</p></doc>
				</param>

				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.distro.services.name">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name of a particular service. For example: HDFS
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="version" style="plain" path="$.distro.services.version">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Version of the service. For example: 2.4
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="components" style="plain" path="$.distro.services.components">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Subset of services that relate to individual processes. For example: Namenode, Datanode
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="modes" style="plain" path="$.distro.services.modes">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Certain services can operate in different modes. This details the list of supported modes. For example: HA, Secondary Namenode, Federated HDFS.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="modes" style="plain" path="$.distro.services.description">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Short description of the service.
					</p></doc>
				</param>

				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.distro.services.components.name">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Component name. For example: Namenode
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="mode" style="plain" path="$.distro.services.components.mode">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Specifies that a particular component is applicable only for a certain mode of operation of the service. For example: Journal Node applies only for a HA Namenode.
					</p></doc>
				</param>
			</representation>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
	</method>

	<!--*******************************************************-->
	<!-- STACK METHODS                                         -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- Create stack: createStack                             -->
	<!--*******************************************************-->

	<method name="POST" id="createStack">
		<wadl:doc xml:lang="EN" title="Create a stack"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation creates a new stack. </para>
			<note>
				<para><emphasis
					role="bold">This functionality is not yet implemented.</emphasis></para></note>
			<note>
				<para>You can create a new stack and start from scratch or 
				use one of the preconfigured global stacks.</para></note>
			<para>The 400 error code might indicate any of the
				following issues:</para>
			<itemizedlist spacing="compact">
				<listitem><para>The response body is invalid.</para>
				</listitem>
				<listitem><para>A stack with the name already exists.</para>
				</listitem>
			</itemizedlist>
		</wadl:doc>
		<request>
			<representation mediaType="application/json">				
				<doc title="Create a stack - first example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/create_stack_request1.json"/>
				</doc>
				<!--			<doc title="Create a stack - second example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/create_stack_request2.json"/>
				</doc> -->
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="stack" style="plain" path="$.stack" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Stack information.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="distro" style="plain" path="$.stack.distro" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Identifier for a particular distribution. For example: HDP2.1
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.stack.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Descriptive name for the stack. For example: HDP_Core
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="description" style="plain" path="$.stack.description" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Description for the stack.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="services" style="plain" path="$.stack.services" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of services and corresponding components.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="node_groups" style="plain" path="$.stack.node_groups" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Definition of the layout of services into grouped cluster nodes.
					</p></doc>
				</param>
				
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.stack.services.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name of a particular service. For example: HDFS
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="modes" style="plain" path="$.stack.services.modes" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of modes to create for a particular service. (Certain services can operate in different modes.)
					</p></doc>
				</param>
				
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.stack.node_groups.id" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">A node group ID or name.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="components" style="plain" path="$.stack.node_groups.components" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of components to run within the node group. 
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="count" style="plain" path="$.stack.node_groups.count" required="false" >
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Number of instances of the node group.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="flavor_id" style="plain" path="$.stack.node_groups.flavor_id" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Flavor ID for the node group.
					</p></doc>
				</param>
				
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.stack.node_groups.components.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Component name. For example: Namenode
					</p></doc>
				</param>	
<!--					<table rules="all">
            		<caption>Required attributes for create stack</caption>
		            <thead>
		                <tr>
		                    <td colspan="1">Keys</td>
		                    <td colspan="1">Attributes</td>
		                    <td colspan="3">Description</td>
		                    <td colspan="1">Required</td>
		                </tr>
		            </thead>
		            <tbody>
		                <tr>
		                    <td colspan="1" rowspan="4">stack</td>
		                    <td colspan="1">distro</td>
		                    <td colspan="3"><para>Identifier for a particular distribution. Ex: HDP2.1</para></td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">name</td>
		                    <td colspan="3">Descriptive name for the stack. Ex: HDP_Core</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">services</td>
		                    <td colspan="3">A list of services and corresponding components</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">node_groups</td>
		                    <td colspan="3">Defines the layout of services into grouped cluster nodes.</td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1" rowspan="2">services</td>
		                    <td colspan="1">name</td>
		                    <td colspan="3">Specifies the name of a praticular service. Ex: HDFS</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">modes</td>
		                    <td colspan="3">Certain services can operate in different modes. This specifies the list of modes to create for a particular service.
		                    </td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1" rowspan="4">node_groups</td>
		                    <td colspan="1">id</td>
		                    <td colspan="3">Specifies a node_group id or name.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">components</td>
		                    <td colspan="3">List of components to run within the node group.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">count</td>
		                    <td colspan="3">No. of instances of that node group.
		                    </td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1">flavor</td>
		                    <td colspan="3">The flavor id for the node group.</td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1" rowspan="1">components</td>
		                    <td colspan="1">name</td>
		                    <td colspan="3">Name of components.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		            </tbody>
		        	</table> -->
					
			</representation>
			
			<representation mediaType="application/json">
			<doc title="Create a stack - second example: JSON request">
				<xsdxt:code href="../wadl/samples/lava2/create_stack_request2.json"/>
			</doc>
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">			
				<doc title="Create a stack - first example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/create_stack_response1.json"/>
				</doc>
				<doc title="Create a stack - second example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/create_stack_response2.json"/>
				</doc>			
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="413" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Request Entity Too Large" xml:lang="EN">The resource quota was exceeded.
			</doc>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- List all stacks: listStacks                           -->
	<!--*******************************************************-->

	<method name="GET" id="listStacks">
		<wadl:doc xml:lang="EN" title="List all stacks"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all stacks, includingglobal stacks and user-created stacks.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_stacks_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Get stack details: getStackDetails                    -->
	<!--*******************************************************-->

	<method name="GET" id="getStackDetails">
		<wadl:doc xml:lang="EN" title="Show stack details"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation shows details for the specified
				stack.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/get_stack_details_response.json"
					/>
				</wadl:doc>
			</representation>
		</response> 
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Delete stack: deleteStack                             -->
	<!--*******************************************************-->

	<method name="DELETE" id="deleteStack">
		<wadl:doc xml:lang="EN" title="Delete a stack"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation deletes the specified stack.</para>
			<note>
				<para><emphasis
					role="bold">This functionality is not yet implemented.</emphasis></para></note>
			<para>You can delete only user-created stacks. Global stacks are read-only, and you cannot delete them.</para>
			<para>The 400 error code might indicate missing or invalid
				parameters.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>
		</wadl:doc>
		<response status="204">
			<doc title="No Content" xml:lang="EN">The server has fulfilled the request and does not need to return a response body.
			</doc>
			<representation mediaType="application/json">
			<!--<remark>The file for the following example is currently empty.</remark> -->	
			<!--	<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/delete_stack_response.json"
					/>
				</wadl:doc> -->
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>


	<!--*******************************************************-->
	<!-- CLUSTER METHODS                                       -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- Create cluster: createCluster                         -->
	<!--*******************************************************-->

	<method name="POST" id="createCluster">
		<wadl:doc xml:lang="EN" title="Create a cluster"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation creates a new cluster.</para>
			<note><para>You must create a stack before you create
					a cluster.</para></note>
			<para>The <code>postInitScript</code> request parameter
				specifies a URL that downloads a script that runs
				after the cluster is created. The status of the run is
				shown in the <code>postInitScriptStatus</code>
				response parameter.</para>
			<para>Possible values for
					<code>postInitScriptStatus</code> are
					<code>FAILED</code>, <code>PENDING</code>,
					<code>DELIVERED</code>, <code>RUNNING</code>,
					<code>SUCCEEDED</code>, and
				<code>None</code>.</para>
			<para>The <code>progress</code> response parameter is
				calculated based on the number of nodes in the cluster
				and their progress through configuration. Currently,
				the calculation is as follows but is subject to
				change:</para>
			<itemizedlist spacing="compact">
				<listitem><para>BUILDING: progress = 0.5 *
						configuring_count /
					len(self.nodes)</para></listitem>
				<listitem><para>CONFIGURING/RESIZING: progress = 0.5 +
						(0.5 * active_count /
					len(self.nodes))</para></listitem>
				<listitem><para>ACTIVE: progress =
					1.0</para></listitem>
			</itemizedlist>
			<para>The 400 error code might indicate any of the
				following issues:</para>
			<itemizedlist spacing="compact">
				<listitem><para>The response body is invalid.</para></listitem>
				<listitem><para>You need to create a stack.</para></listitem>
				<listitem><para>The node count is invalid.</para></listitem>
				<listitem><para>The flavor is invalid.</para></listitem>
				<listitem><para>The data is malformed.</para></listitem>
			</itemizedlist>
			<para>The 413 error code might indicate that the resource
				limit is exceeded.</para>
		</wadl:doc>
		<request>
			<representation mediaType="application/json"
				element="clusters:cluster">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
<!--					<table rules="all">
            		<caption>Required attributes for create cluster</caption>
		            <thead>
		                <tr>
		                    <td colspan="1">Keys</td>
		                    <td colspan="1">Attributes</td>
		                    <td colspan="3">Description</td>
		                    <td colspan="1">Required</td>
		                </tr>
		            </thead>
		            <tbody>
		                <tr>
		                    <td colspan="1" rowspan="2">cluster</td>
		                    <td colspan="1">name</td>
		                    <td colspan="3"><para>Name for the cluster</para></td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">stack</td>
		                    <td colspan="3">Stack details to use for the cluster.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1" rowspan="2">stack</td>
		                    <td colspan="1">id</td>
		                    <td colspan="3">Specifies a stack id.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">node_groups</td>
		                    <td colspan="3">List of node groups where various components reside.</td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1" rowspan="3">node_groups</td>
		                    <td colspan="1">id</td>
		                    <td colspan="3">Specifies a node_group id or name.</td>
		                    <td colspan="1">Yes</td>
		                </tr>
		                <tr>
		                    <td colspan="1">count</td>
		                    <td colspan="3">No. of instances of that node group.
		                    </td>
		                    <td colspan="1">No</td>
		                </tr>
		                <tr>
		                    <td colspan="1">flavor</td>
		                    <td colspan="3">The flavor id for the node group.</td>
		                    <td colspan="1">No</td>
		                </tr>
		            </tbody>
		        	</table> -->
					<xsdxt:code
						href="../wadl/samples/lava2/create_cluster_request.json"
					/>
				</wadl:doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.cluster.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name for the cluster.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="username" style="plain" path="$.cluster.username" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Cluster SSH login username.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="ssh_keys" style="plain" path="$.cluster.ssh_keys" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of ssh credential key names.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="stack" style="plain" path="$.cluster.stack_id" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Stack ID to use for the cluster.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="node_groups" style="plain" path="$.cluster.node_groups" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of node groups where various components reside.
						Note: This overrides any values already defined as part of the stack's node groups.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.cluster.node_groups.id" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">A node group ID or name.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="count" style="plain" path="$.cluster.node_groups.count" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Number of instances of the node group.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="flavor_id" style="plain" path="$.cluster.node_groups.flavor_id" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Flavor ID for the node group.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="connectors" style="plain" path="$.cluster.connectors" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of connector credentials. Note: This also enables the connector for use with the cluster.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.cluster.connectors.type" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Type of connector. Ex: cloud_files
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.cluster.connectors.credential.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Name of credential for specific type of connector.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="scripts" style="plain" path="$.cluster.scripts" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">List of scripts to run post install of cluster.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="id" style="plain" path="$.cluster.scripts.id" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">A script ID.
					</p></doc>
				</param>
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/create_cluster_response.json"
					/>
				</wadl:doc>
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="413" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Request Entity Too Large" xml:lang="EN">The resource quota was exceeded.
			</doc>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- List all clusters: listClusters                       -->
	<!--*******************************************************-->

	<method name="GET" id="listClusters">
		<wadl:doc xml:lang="EN" title="List all clusters"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all clusters for your
				account.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_clusters_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Get cluster details: getClusterDetails                -->
	<!--*******************************************************-->

	<method name="GET" id="getClusterDetails">
		<wadl:doc xml:lang="EN" title="Show cluster details"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation shows details for the specified
				cluster.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/get_cluster_details_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Delete cluster: deleteCluster                         -->
	<!--*******************************************************-->

	<method name="DELETE" id="deleteCluster">
		<wadl:doc xml:lang="EN" title="Delete a cluster"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation deletes the specified cluster.</para>
			<para>The 400 error code might indicate missing or invalid
				parameters.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>			
		</wadl:doc>
		<response status="204" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="No Content" xml:lang="EN">The server has fulfilled the request and does not need to return a request body.</doc>
			<representation mediaType="application/json">
		    <!--<remark>The file for the following example is currently empty.</remark> -->		
			<!--	<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/delete_cluster_response.json"
					/>
				</wadl:doc> -->
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>

	<!--*******************************************************-->
	<!-- Resize cluster: resizeCluster                         -->
	<!--*******************************************************-->

	<method name="PUT" id="resizeCluster">
		<wadl:doc xml:lang="EN" title="Resize a cluster"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation resizes the cluster specified by
				<code>clusterId</code>.</para>
			<para>The 400 error code might indicate the presence of
				unacceptable parameters or malformed data.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>			
		</wadl:doc>
		<request>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/resize_cluster_request.json"
					/>
				</wadl:doc> 
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/resize_cluster_response.json"
					/>
				</wadl:doc> 
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>

	<!--*******************************************************-->
	<!-- NODE METHODS                                          -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- List cluster nodes: listClusterNodes                  -->
	<!--*******************************************************-->

	<method name="GET" id="listClusterNodes">
		<wadl:doc xml:lang="EN" title="List cluster nodes"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all nodes for the specified
				cluster.</para>
			<para>Valid values for the request body parameter
					<code>postInitScriptStatus</code> are
					<code>FAILED</code>, <code>PENDING</code>,
					<code>DELIVERED</code>, <code>RUNNING</code>,
					<code>SUCCEEDED</code>, and
				<code>None</code>.</para>
			<para>Valid values for the node status are in <link
				xlink:href="http://docs-internal-staging.rackspace.com/cbd/api/v1.0/cbd-devguide-2/content/node_status.html"
				>"Node status"</link>.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_cluster_nodes_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		</method>


	<!--*******************************************************-->
	<!-- SCRIPT METHODS                                        -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- Create script: createScript                           -->
	<!--*******************************************************-->

	<method name="POST" id="createScript">
		<wadl:doc xml:lang="EN" title="Create a script"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation creates a new script.</para>
			<para>You can create a custom script that can be run during various phases of the 
				clusters lifecycle. These scripts are invoked on all nodes of the cluster. The script type that is currently supported is <code>POST_INIT</code>, which runs after the cluster
			    has been completely set up. The script must be 
			    executable. Preferably, the script should be a bash script, but it could be a python script, or a
			    self-contained executable that works with the base OS installed libraries.</para>
			<para>By default, product-provided scripts that have a <code>is_public</code> flag run.You do not have the option to edit these scripts.</para>
			<note><para>A POST_INIT script runs on all new nodes. This script runs first on all nodes when you create the cluster
				and then runs on any subsequent resizing of the cluster. The script also runs when you add new nodes to the cluster.</para></note>
			<para>You receive an error is a script with the specified name already exists.</para>
			
		</wadl:doc>
		<request>
			<representation mediaType="application/json">
				<doc title="Create a script example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/create_script_request.json"/>
				</doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="script" style="plain" path="$.script" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Script information.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.script.name" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Descriptive name for the script. For example: Setup iPython Notebooks
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="type" style="plain" path="$.script.type" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Indicates when a script gets run. Supported types are POST_INIT.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="url" style="plain" path="$.script.url" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">URL where the script resides.
					</p></doc>
				</param>
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<doc title="Create a script example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/create_script_response.json"/>
				</doc>
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="413" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Request Entity Too Large" xml:lang="EN">The resource quota was exceeded.
			</doc>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- List all scripts: listScripts                         -->
	<!--*******************************************************-->

	<method name="GET" id="listScripts">
		<wadl:doc xml:lang="EN" title="List all scripts"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all scripts, including global, product-provided scripts and user-created scripts.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_scripts_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Update script: updateScript                           -->
	<!--*******************************************************-->

	<method name="PUT" id="updateScript">
		<wadl:doc xml:lang="EN" title="Update a script"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation updates the specified user script.</para>
			<para>You can update only the URL and name of the script to reflect either changes to script or script location.</para>
			<para>The 400 error code might indicate missing or invalid
				parameters.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>
		</wadl:doc>
		<request>
			<representation mediaType="application/json">
				<doc title="Update a script example: JSON request">
					<xsdxt:code href="../wadl/samples/lava2/update_script_request.json"/>
				</doc>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="script" style="plain" path="$.script" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Script information.
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="name" style="plain" path="$.script.name" required="false">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">Descriptive name for the script. For example: Setup iPython Notebooks
					</p></doc>
				</param>
				<param xmlns="http://wadl.dev.java.net/2009/02"
					name="url" style="plain" path="$.script.url" required="true">
					<doc><p xmlns="http://www.w3.org/1999/xhtml">URL where the script resides.
					</p></doc>
				</param>
			</representation>
		</request>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<doc title="Create a script example: JSON response">
					<xsdxt:code href="../wadl/samples/lava2/update_script_response.json"/>
				</doc>
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="413" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Request Entity Too Large" xml:lang="EN">The resource quota was exceeded.
			</doc>
		</response>
	</method>

	<!--*******************************************************-->
	<!-- Delete script: deleteScript                           -->
	<!--*******************************************************-->

	<method name="DELETE" id="deleteScript">
		<wadl:doc xml:lang="EN" title="Delete a script"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Thie operation deletes the specified user script.</para>
			<para>You can delete only user-created scripts. Global scripts are read-only and you cannot delete them.</para>
			<para>The 400 error code might indicate missing or invalid
				parameters.</para>
			<para>The 409 error code might indicate an invalid
				state.</para>
		</wadl:doc>
		<response status="204">
			<doc title="No Content" xml:lang="EN">The server has fulfilled the request and does not need to return a request body.
			</doc>
			<representation mediaType="application/json">
			</representation>
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Bad Request" xml:lang="EN">The user-provided request contained an error.
			</doc>
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">			
			<doc title="Not Found" xml:lang="EN">The back-end services did not find anything matching the request URI.</doc>			
		</response>
		<response status="409" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Conflict" xml:lang="EN">The requested resource cannot currently be operated on. 
			</doc>
		</response> 
	</method>

	<!--*******************************************************-->
	<!-- FLAVORS METHODS                                       -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- List available flavors: listFlavors                   -->
	<!--*******************************************************-->

	<method name="GET" id="listFlavors">
		<wadl:doc xml:lang="EN" title="List available flavors"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation lists all available flavors,
				including the drive size and amount of RAM.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/list_flavors_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>


	<!--*******************************************************-->
	<!-- LIMITS METHODS                                        -->
	<!--*******************************************************-->

	<!--*******************************************************-->
	<!-- Show resource limits: getLimits                       -->
	<!--*******************************************************-->

	<method name="GET" id="getLimits">
		<wadl:doc xml:lang="EN" title="Show resource limits"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">This operation shows the absolute resource limits for the user,
				including the remaining node count, available RAM, and
				remaining disk space.</para>
		</wadl:doc>
		<response status="200">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xml:lang="EN"
					xmlns="http://docbook.org/ns/docbook">
					<xsdxt:code
						href="../wadl/samples/lava2/get_limits_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>
</application>
